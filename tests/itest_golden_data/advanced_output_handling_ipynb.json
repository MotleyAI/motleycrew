"def bubble_sort(arr):\n    n = len(arr)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if arr[j] > arr[j+1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n    return arr\n\n# Test the bubble sort implementation\nsample_list = [64, 34, 25, 12, 22, 11, 90]\nsorted_list = bubble_sort(sample_list)\nprint(sorted_list)\n\nThe bubble sort implementation has been successfully tested with a sample list, and it returned the sorted list as expected. \n\nExplanation:\n1. The `bubble_sort` function takes a list `arr` as input.\n2. It calculates the length of the list `n`.\n3. It uses two nested loops to iterate through the list. The outer loop runs `n` times, and the inner loop runs `n-i-1` times, where `i` is the current iteration of the outer loop.\n4. Inside the inner loop, it compares each pair of adjacent elements. If the element on the left (`arr[j]`) is greater than the element on the right (`arr[j+1]`), it swaps them.\n5. This process continues until the list is sorted.\n6. The function returns the sorted list.\n\nThe test case demonstrates the function by sorting the sample list `[64, 34, 25, 12, 22, 11, 90]`, which results in `[11, 12, 22, 25, 34, 64, 90]`. "