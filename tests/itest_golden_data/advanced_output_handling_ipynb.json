"def bubble_sort(arr):\n    n = len(arr)\n    for i in range(n):\n        swapped = False\n        for j in range(0, n-i-1):\n            if arr[j] > arr[j+1]:\n                arr[j], arr[j+1] = arr[j+1], arr[j]\n                swapped = True\n        if not swapped:\n            break\n    return arr\n\n# Test the bubble sort function\nsample_array = [64, 34, 25, 12, 22, 11, 90]\nsorted_array = bubble_sort(sample_array)\nprint(sorted_array)\n\nThis Python program implements the bubble sort algorithm. The `bubble_sort` function takes a list `arr` as input and sorts it in ascending order. It works by repeatedly stepping through the list, comparing adjacent elements, and swapping them if they are in the wrong order. The outer loop runs `n` times, where `n` is the length of the list, and the inner loop runs `n-i-1` times to avoid re-checking the already sorted elements. An optimization is added with a `swapped` flag to detect if any swaps were made during a pass. If no swaps were made, the list is already sorted, and the loop breaks early. The test case demonstrates the function by sorting a sample array `[64, 34, 25, 12, 22, 11, 90]`, and the sorted result `[11, 12, 22, 25, 34, 64, 90]` is printed."